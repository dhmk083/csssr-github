[
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114229419",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114229419",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114229419,
    "node_id": "IC_kwDOAT9aAc5Cacqr",
    "user": {
      "login": "MartinJohns",
      "id": 5269069,
      "node_id": "MDQ6VXNlcjUyNjkwNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5269069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MartinJohns",
      "html_url": "https://github.com/MartinJohns",
      "followers_url": "https://api.github.com/users/MartinJohns/followers",
      "following_url": "https://api.github.com/users/MartinJohns/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinJohns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MartinJohns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinJohns/subscriptions",
      "organizations_url": "https://api.github.com/users/MartinJohns/orgs",
      "repos_url": "https://api.github.com/users/MartinJohns/repos",
      "events_url": "https://api.github.com/users/MartinJohns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MartinJohns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T12:59:48Z",
    "updated_at": "2022-05-01T13:00:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Duplicate of #44944. Used search terms: `JSON.parse buffer`",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114229419/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114245273",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114245273",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114245273,
    "node_id": "IC_kwDOAT9aAc5CagiZ",
    "user": {
      "login": "dev-itsheng",
      "id": 10683193,
      "node_id": "MDQ6VXNlcjEwNjgzMTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10683193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dev-itsheng",
      "html_url": "https://github.com/dev-itsheng",
      "followers_url": "https://api.github.com/users/dev-itsheng/followers",
      "following_url": "https://api.github.com/users/dev-itsheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/dev-itsheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dev-itsheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dev-itsheng/subscriptions",
      "organizations_url": "https://api.github.com/users/dev-itsheng/orgs",
      "repos_url": "https://api.github.com/users/dev-itsheng/repos",
      "events_url": "https://api.github.com/users/dev-itsheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dev-itsheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T13:59:56Z",
    "updated_at": "2022-05-01T13:59:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Duplicate of #44944. Used search terms: `JSON.parse buffer`\r\n\r\nyes.\r\n\r\nIn fact, I also searched for this before raising this issue, but I don't agree with it.\r\n\r\nFirst of all, `Buffer` is a type that exists only in Node.js, it should not be put into the generic `lib.es5.d.ts`.\r\n\r\nSecond, `JSON.parse` can handle the `Buffer` type because `Buffer.prototype` has a legal `toString` method, which can convert a `Buffer` into a correct string. In this case, other non- String values should be treated the same, not just this one specific type.\r\n\r\nbut:\r\n\r\nThe first time I didn't notice, there was a very old issue linked under that issue https://github.com/microsoft/TypeScript/issues/17203 , and although it focused on a different point than mine (`parseFloat`), the point of view there is controversial and worth discussing.\r\n\r\nLet's pay attention to the last two comments:\r\n\r\n> I would argue that for built-ins like parseFloat, isNaN, etc. that the input parameters should be any. The main reason for type checking input parameters for a function is to prevent runtime errors, but in these cases we know that no matter what input you pass to these functions you will not get a runtime error.\r\n\r\nand:\r\n\r\n> @jcready I think a primary reason for type checking is to prevent bugs. Not all bugs manifest as runtime errors.\r\n\r\nOn the second floor, the leader of TS also has a sentence:\r\n\r\n> at worst it means the entirely wrong thing is happening.\r\n\r\nThis may be the reason why the previous problem was not solved, so let's rethink:\r\n\r\nShould this be wrong?\r\n\r\nSee [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse):\r\n\r\n> The JSON.parse() method parses a JSON string, constructing the JavaScript value or object described by the string. An optional reviver function can be provided to perform a transformation on the resulting object before it is returned.\r\n\r\nIt seems that almost everyone agrees that `JSON.parse()` should be passed in a string.\r\n\r\nThis may be more of a conceptual issue than a technical one.\r\n\r\nMaybe we should ask the authors of https://github.com/sindresorhus/eslint-plugin-unicorn/issues/1273 to discuss this, especially the author @fisker.",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114245273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114247082",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114247082",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114247082,
    "node_id": "IC_kwDOAT9aAc5Cag-q",
    "user": {
      "login": "MartinJohns",
      "id": 5269069,
      "node_id": "MDQ6VXNlcjUyNjkwNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5269069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MartinJohns",
      "html_url": "https://github.com/MartinJohns",
      "followers_url": "https://api.github.com/users/MartinJohns/followers",
      "following_url": "https://api.github.com/users/MartinJohns/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinJohns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MartinJohns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinJohns/subscriptions",
      "organizations_url": "https://api.github.com/users/MartinJohns/orgs",
      "repos_url": "https://api.github.com/users/MartinJohns/repos",
      "events_url": "https://api.github.com/users/MartinJohns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MartinJohns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T14:04:28Z",
    "updated_at": "2022-05-01T14:13:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "> but I don't agree with it.\r\n\r\nSuch an issue has been raised again and again, and the answer was always the same by the TypeScript team.\r\n\r\n> This may be more of a conceptual issue than a technical one.\r\n\r\nWhat do you believe will cause more issues and trouble for most developers:\r\n\r\n- Being able to accidentally pass completely incompatible types, or\r\n- having to call `toString()` on your object?\r\n\r\nI'm confident to say the first option is by far worse than the second.\r\n\r\n---\r\n\r\nWhat you actually want is something like #35945. The ability to pass types that explicitly coerce to `string` in place of `string`.",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114247082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114250294",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114250294",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114250294,
    "node_id": "IC_kwDOAT9aAc5Cahw2",
    "user": {
      "login": "dev-itsheng",
      "id": 10683193,
      "node_id": "MDQ6VXNlcjEwNjgzMTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10683193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dev-itsheng",
      "html_url": "https://github.com/dev-itsheng",
      "followers_url": "https://api.github.com/users/dev-itsheng/followers",
      "following_url": "https://api.github.com/users/dev-itsheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/dev-itsheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dev-itsheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dev-itsheng/subscriptions",
      "organizations_url": "https://api.github.com/users/dev-itsheng/orgs",
      "repos_url": "https://api.github.com/users/dev-itsheng/repos",
      "events_url": "https://api.github.com/users/dev-itsheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dev-itsheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T14:14:39Z",
    "updated_at": "2022-05-01T14:14:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > but I don't agree with it.\r\n> \r\n> Such an issue has been raised again and again, and the answer was always the same by the TypeScript team.\r\n> \r\n> > This may be more of a conceptual issue than a technical one.\r\n> \r\n> What do you believe will cause more issues and trouble for most developers:\r\n> \r\n> * Being able to accidentally pass completely incompatible types, or\r\n> * having to call `toString()` on your object?\r\n> \r\n> I'm confident to say the first option is by far worse than the second.\r\n> \r\n> What you actually want is something like #35945. The ability to pass types that explicitly coerce to `string` in place of `string`.\r\n\r\nYou're right, I think it touches on a deeper issue:\r\n\r\nTypeScript (or ESLint, or some other best practice) wants to make the code clearer and more intuitive, for example, we recommend using strict operators (like `===`) instead of operations that may cause implicit type conversions character (such as `==`).\r\n\r\nThat said, the above principle encourages us to do more explicit work than implicit work.\r\n\r\nContinuing in this line of thought, our code might look like this:\r\n\r\n```javascript\r\nconst obj = {\r\n     toString() {\r\n         return '[1, 2, 3]'\r\n     }\r\n};\r\n\r\nconst arr = JSON.parse(String(obj)); // [1, 2, 3]\r\n// or\r\nconst arr = JSON.parse(obj.toString()); // [1, 2, 3]\r\n// even\r\nconst arr = JSON.parse(obj + ''); // [1, 2, 3]\r\n```\r\n\r\nIn this way, TypeScript will not report an error.\r\n\r\nSimilar things are done for `Buffer` objects, and even other more complex and general types.\r\n\r\nWhat do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114250294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114262959",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114262959",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114262959,
    "node_id": "IC_kwDOAT9aAc5Cak2v",
    "user": {
      "login": "fisker",
      "id": 172584,
      "node_id": "MDQ6VXNlcjE3MjU4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/172584?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisker",
      "html_url": "https://github.com/fisker",
      "followers_url": "https://api.github.com/users/fisker/followers",
      "following_url": "https://api.github.com/users/fisker/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisker/subscriptions",
      "organizations_url": "https://api.github.com/users/fisker/orgs",
      "repos_url": "https://api.github.com/users/fisker/repos",
      "events_url": "https://api.github.com/users/fisker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T15:13:23Z",
    "updated_at": "2022-05-01T15:13:23Z",
    "author_association": "NONE",
    "body": "FYI：I proposed `unicorn/prefer-json-parse-buffer` rule for these reasons:\r\n\r\n1. https://github.com/sindresorhus/eslint-plugin-unicorn/issues/1273#issuecomment-1034509249\r\n2. https://github.com/sindresorhus/eslint-plugin-unicorn/issues/1273#issuecomment-1034512318",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114262959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114264196",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114264196",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114264196,
    "node_id": "IC_kwDOAT9aAc5CalKE",
    "user": {
      "login": "fisker",
      "id": 172584,
      "node_id": "MDQ6VXNlcjE3MjU4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/172584?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fisker",
      "html_url": "https://github.com/fisker",
      "followers_url": "https://api.github.com/users/fisker/followers",
      "following_url": "https://api.github.com/users/fisker/following{/other_user}",
      "gists_url": "https://api.github.com/users/fisker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fisker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fisker/subscriptions",
      "organizations_url": "https://api.github.com/users/fisker/orgs",
      "repos_url": "https://api.github.com/users/fisker/repos",
      "events_url": "https://api.github.com/users/fisker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fisker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T15:19:28Z",
    "updated_at": "2022-05-01T15:19:28Z",
    "author_association": "NONE",
    "body": "Anyway, \r\n\r\n1. The Node.js fs performance issue already fixed. https://github.com/nodejs/node/issues/37583#issuecomment-1043566123\r\n2. Node.js already supports import JSON module. https://github.com/nodejs/node/pull/41736\r\n\r\nUse that rule on your own judgement.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114264196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114352155",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114352155",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114352155,
    "node_id": "IC_kwDOAT9aAc5Ca6ob",
    "user": {
      "login": "MartinJohns",
      "id": 5269069,
      "node_id": "MDQ6VXNlcjUyNjkwNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5269069?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MartinJohns",
      "html_url": "https://github.com/MartinJohns",
      "followers_url": "https://api.github.com/users/MartinJohns/followers",
      "following_url": "https://api.github.com/users/MartinJohns/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinJohns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MartinJohns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinJohns/subscriptions",
      "organizations_url": "https://api.github.com/users/MartinJohns/orgs",
      "repos_url": "https://api.github.com/users/MartinJohns/repos",
      "events_url": "https://api.github.com/users/MartinJohns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MartinJohns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T22:23:46Z",
    "updated_at": "2022-05-01T22:23:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> TypeScript [...] wants to make the code clearer and more intuitive\r\n\r\nI'd argue most people use TypeScript for type-safety to avoid bugs at design and compilation time. Accepting only `string` instead of just any type for an argument that effectively should only be a `string` is part of it.",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114352155/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114501520",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114501520",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114501520,
    "node_id": "IC_kwDOAT9aAc5CbfGQ",
    "user": {
      "login": "dev-itsheng",
      "id": 10683193,
      "node_id": "MDQ6VXNlcjEwNjgzMTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10683193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dev-itsheng",
      "html_url": "https://github.com/dev-itsheng",
      "followers_url": "https://api.github.com/users/dev-itsheng/followers",
      "following_url": "https://api.github.com/users/dev-itsheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/dev-itsheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dev-itsheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dev-itsheng/subscriptions",
      "organizations_url": "https://api.github.com/users/dev-itsheng/orgs",
      "repos_url": "https://api.github.com/users/dev-itsheng/repos",
      "events_url": "https://api.github.com/users/dev-itsheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dev-itsheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T05:08:44Z",
    "updated_at": "2022-05-02T05:10:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The Node.js fs performance issue already fixed. https://github.com/nodejs/node/issues/37583#issuecomment-1043566123\r\n\r\nThis could be the difference between these two:\r\n\r\n```javascript\r\n// 1\r\nimport fsP from 'fs/promises';\r\nJSON.parse(await fsP.readFile('./***.json'));\r\n\r\n// 2\r\nimport fs from 'fs';\r\nJSON.parse(fs.readFileSync('./***.json'));\r\n```\r\n\r\ninstead of:\r\n\r\n```javascript\r\n// 1-1\r\nimport fs from 'fs';\r\nJSON.parse(fs.readFileSync('./***.json'));\r\n\r\n// 1-2\r\nimport fs from 'fs';\r\nJSON.parse(fs.readFileSync('./***.json'), 'utf8');\r\n\r\n// 2-1\r\nimport fsP from 'fs/promises';\r\nJSON.parse(await fs.readFile('./***.json'));\r\n\r\n// 1-2\r\nimport fsP from 'fs/promises';\r\nJSON.parse(await fs.readFile('./***.json'), 'utf8');\r\n```\r\n\r\nWhen I see \r\n\r\n> Passing in a buffer may not be performant\r\n\r\nin https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-json-parse-buffer.md, I think that 1-1 (or 2-1) is slower than 1-2 (or 2-2), but I see the source code of [`fs.readFile`](https://github.com/nodejs/node/blob/master/lib/fs.js#L502) and [`Buffer.prototype.toString`](https://github.com/nodejs/node/blob/master/lib/buffer.js#L784), they seem to do the same thing, that is, there won't be a very noticeable performance difference.\r\n\r\nOf course that's not the point.\r\n\r\n> Such an issue has been raised again and again, and the answer was always the same by the TypeScript team.\r\n\r\nI read the previous reasons why the TypeScript team objected to a request similar to mine, and realized that they didn't expect \"implicit type conversions\" to happen, but to pass each parameter in the most natural and intuitive way possible.\r\n\r\n> most people use TypeScript for type-safety to avoid bugs at design and compilation time\r\n\r\nYes, we shouldn't break the type safety that most people expect in order to take care of such an extreme case that hardly anyone uses.\r\n\r\n> Main reason we are reading JSON files a lot is because we can't import JSON yet, compare to require('./foo.json') we used do, JSON.parse(await fs.readFile(file, 'utf8')) vs JSON.parse(await fs.readFile(file)), I prefer the shorter one.\r\n>\r\n> (from https://github.com/sindresorhus/eslint-plugin-unicorn/issues/1273#issuecomment-1034512318)\r\n\r\nIf this scenario is indeed used very frequently, I think it may be a better choice to encapsulate a function:\r\n\r\n```typescript\r\nimport fsP from 'fs/promises';\r\n\r\nconst readJsonFile = async (path: string) => JSON.parse(await fsP.readFile(path, 'utf8'));\r\n```\r\n\r\nIn order not to break type safety, I think it's worth it.",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114501520/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114502972",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114502972",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114502972,
    "node_id": "IC_kwDOAT9aAc5Cbfc8",
    "user": {
      "login": "Josh-Cena",
      "id": 55398995,
      "node_id": "MDQ6VXNlcjU1Mzk4OTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/55398995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Josh-Cena",
      "html_url": "https://github.com/Josh-Cena",
      "followers_url": "https://api.github.com/users/Josh-Cena/followers",
      "following_url": "https://api.github.com/users/Josh-Cena/following{/other_user}",
      "gists_url": "https://api.github.com/users/Josh-Cena/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Josh-Cena/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Josh-Cena/subscriptions",
      "organizations_url": "https://api.github.com/users/Josh-Cena/orgs",
      "repos_url": "https://api.github.com/users/Josh-Cena/repos",
      "events_url": "https://api.github.com/users/Josh-Cena/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Josh-Cena/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T05:11:43Z",
    "updated_at": "2022-05-02T05:11:43Z",
    "author_association": "NONE",
    "body": "I'm getting confused by the conversation... @dev-itsheng You opened the issue saying `JSON.parse()` should allow `any`, but your follow-up comments seem to lean towards the original `string` parameter type?",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114502972/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114504210",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114504210",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114504210,
    "node_id": "IC_kwDOAT9aAc5CbfwS",
    "user": {
      "login": "dev-itsheng",
      "id": 10683193,
      "node_id": "MDQ6VXNlcjEwNjgzMTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10683193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dev-itsheng",
      "html_url": "https://github.com/dev-itsheng",
      "followers_url": "https://api.github.com/users/dev-itsheng/followers",
      "following_url": "https://api.github.com/users/dev-itsheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/dev-itsheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dev-itsheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dev-itsheng/subscriptions",
      "organizations_url": "https://api.github.com/users/dev-itsheng/orgs",
      "repos_url": "https://api.github.com/users/dev-itsheng/repos",
      "events_url": "https://api.github.com/users/dev-itsheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dev-itsheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T05:14:23Z",
    "updated_at": "2022-05-02T05:14:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I'm getting confused by the conversation... @dev-itsheng You opened the issue saying `JSON.parse()` should allow `any`, but your follow-up comments seem to lean towards the original `string` parameter type?\r\n\r\nBecause I was convinced by them and decided to change my original idea.\r\n\r\nIn fact, I was also influenced by @fisker when I first made this point, so I @@fisker to join the discussion at the beginning.\r\n\r\nMaybe I should close this issue and let them continue the discussion?",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114504210/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114505711",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114505711",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114505711,
    "node_id": "IC_kwDOAT9aAc5CbgHv",
    "user": {
      "login": "Josh-Cena",
      "id": 55398995,
      "node_id": "MDQ6VXNlcjU1Mzk4OTk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/55398995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Josh-Cena",
      "html_url": "https://github.com/Josh-Cena",
      "followers_url": "https://api.github.com/users/Josh-Cena/followers",
      "following_url": "https://api.github.com/users/Josh-Cena/following{/other_user}",
      "gists_url": "https://api.github.com/users/Josh-Cena/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Josh-Cena/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Josh-Cena/subscriptions",
      "organizations_url": "https://api.github.com/users/Josh-Cena/orgs",
      "repos_url": "https://api.github.com/users/Josh-Cena/repos",
      "events_url": "https://api.github.com/users/Josh-Cena/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Josh-Cena/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T05:17:27Z",
    "updated_at": "2022-05-02T05:17:27Z",
    "author_association": "NONE",
    "body": "It seems no-one's actually in favor of allowing passing anything to `JSON.parse()`, if TS doesn't like it. Fisker's preference is mainly personal, and this rule is already removed from unicorn's recommended set.",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114505711/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114506120",
    "html_url": "https://github.com/microsoft/TypeScript/issues/48907#issuecomment-1114506120",
    "issue_url": "https://api.github.com/repos/microsoft/TypeScript/issues/48907",
    "id": 1114506120,
    "node_id": "IC_kwDOAT9aAc5CbgOI",
    "user": {
      "login": "dev-itsheng",
      "id": 10683193,
      "node_id": "MDQ6VXNlcjEwNjgzMTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10683193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dev-itsheng",
      "html_url": "https://github.com/dev-itsheng",
      "followers_url": "https://api.github.com/users/dev-itsheng/followers",
      "following_url": "https://api.github.com/users/dev-itsheng/following{/other_user}",
      "gists_url": "https://api.github.com/users/dev-itsheng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dev-itsheng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dev-itsheng/subscriptions",
      "organizations_url": "https://api.github.com/users/dev-itsheng/orgs",
      "repos_url": "https://api.github.com/users/dev-itsheng/repos",
      "events_url": "https://api.github.com/users/dev-itsheng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dev-itsheng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-02T05:18:22Z",
    "updated_at": "2022-05-02T05:18:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, let this be the end of it.",
    "reactions": {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/comments/1114506120/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
